{"version":3,"file":"node_modules_ionic_core_dist_esm_index-c4b11676_js-node_modules_ionic_core_dist_esm_ion-refre-fb0ced.db8ef565fcc75970.js","mappings":";;;;AASA,MAAMA,EAAkB,CAACC,KAAYC,IAC5BC,QAAQC,KAAM,oBAAmBH,OAAcC,GASlDG,EAAgB,CAACJ,KAAYC,IAC1BC,QAAQG,MAAO,kBAAiBL,OAAcC,GASjDK,EAA4B,CAACC,KAAOC,IACjCN,QAAQG,MAAO,IAAGE,EAAGE,QAAQC,sCAAsCF,EAAgBG,KAAK;;;kBCdjG,MAUMC,EAAuBC,IAC3B,MAAMC,EAAUD,EAAqBE,cAAc,eAC7CC,EAASF,EAAQG,WAAWF,cAAc,UAC1CG,EAAwBL,EAAqBE,cAAc,4BAC3DI,EAAiBN,EAAqBE,cAAc,oBACpDK,EAAQD,EAAiBA,EAAeJ,cAAc,YAAc,KACpEM,KAAgBC,OAAkBC,SAAS,KAAMC,OAAO,YACxDC,KAAiCH,OACpCI,WAAWR,GACXS,UAAU,CACX,CAAEC,OAAQ,EAAGC,QAAS,OACtB,CAAED,OAAQ,IAAMC,QAAS,OACzB,CAAED,OAAQ,IAAMC,QAAS,KACzB,CAAED,OAAQ,EAAGC,QAAS,OAElBC,KAAuBR,OAC1BI,WAAWV,GACXW,UAAU,CACX,CAAEC,OAAQ,EAAGG,gBAAiB,cAC9B,CAAEH,OAAQ,GAAKG,gBAAiB,cAChC,CAAEH,OAAQ,IAAMG,gBAAiB,gBACjC,CAAEH,OAAQ,EAAGG,gBAAiB,kBAE1BC,KAAuBV,OAC1BI,WAAWZ,GACXa,UAAU,CACX,CAAEC,OAAQ,EAAGK,UAAW,kBACxB,CAAEL,OAAQ,EAAGK,UAAW,oBAO1B,GAAId,GAAkBC,EAAO,CAC3B,MAAMc,KAA0BZ,OAC7BI,WAAWP,GACXQ,UAAU,CACX,CAAEC,OAAQ,EAAGK,UAAW,gBACxB,CAAEL,OAAQ,GAAKK,UAAW,gBAC1B,CAAEL,OAAQ,IAAMK,UAAW,kBAC3B,CAAEL,OAAQ,EAAGK,UAAW,oBAEpBE,KAAiBb,OACpBI,WAAWN,GACXO,UAAU,CACX,CAAEC,OAAQ,EAAGK,UAAW,4BACxB,CAAEL,OAAQ,GAAKK,UAAW,4BAC1B,CAAEL,OAAQ,IAAMK,UAAW,+BAC3B,CAAEL,OAAQ,EAAGK,UAAW,iCAE1BZ,EAAce,aAAa,CAACF,EAAyBC,GACvD,CACA,OAAOd,EAAce,aAAa,CAACX,EAAgCK,EAAsBE,GAAqB,EAE1GK,EAAuB,CAACxB,EAAsByB,KAUlD,MAAMC,EAASD,EAAYE,aACrBC,KAAmBnB,OACtBI,WAAWb,GACXc,UAAU,CACX,CAAEC,OAAQ,EAAGK,UAAY,wBAAuBM,QAChD,CAAEX,OAAQ,EAAGK,UAAW,gCAE1B,OAAOrB,EAAoBC,GAAsBuB,aAAa,CAACK,GAAiB,EAE5EC,EAA2B,CAAC7B,EAAsByB,KAUtD,MAAMC,EAASD,EAAYE,aACrBC,KAAmBnB,OACtBI,WAAWb,GACXc,UAAU,CACX,CAAEC,OAAQ,EAAGK,UAAY,eAAcM,QACvC,CAAEX,OAAQ,EAAGK,UAAW,uBAE1B,OAAOrB,EAAoBC,GAAsBuB,aAAa,CAACK,GAAiB,EAsC5EE,EAAmB,CAACpC,EAAIqC,EAAOrB,EAAW,OAC9C,IAAKhB,EACH,OAAOsC,QAAQC,UAEjB,MAAMC,KAAQC,KAAmBzC,EAAIgB,GACrC0B,cAAU,KACR1C,EAAG2C,MAAMC,YAAY,aAAe,GAAE5B,yBACxB6B,IAAVR,EACFrC,EAAG2C,MAAMG,eAAe,aAGxB9C,EAAG2C,MAAMC,YAAY,YAAc,oBAAmBP,UAAa,GAGhEG,GAIHO,EAAwB,yBAAG,UAAOC,EAAaC,GACnD,MAAMC,EAAmBF,EAAYxC,cAAc,yBACnD,IAAK0C,EACH,OAAOZ,QAAQC,SAAQ,SAEnB,IAAID,QAASC,MAAYY,KAAiBD,EAAkBX,IAClE,MAAMa,EAAiBJ,EAAYxC,cAAc,wDAC3C6C,EAAoBL,EAAYxC,cAAc,2DACpD,OAA2B,OAAnB4C,GACgB,OAAtBC,IACW,QAATJ,IAAS,EAASK,KAAW,gBAA2DT,IAA9CG,EAAYL,MAAMY,yBACnD,OAATN,EACN,GAAC,gBAZ6BO,wCAkBxBC,EAAY,MAChBC,YAAYC,IACVC,OAAiBC,KAAMF,GACvBE,KAAKC,cAAaC,KAAYF,KAAM,aAAc,GAClDA,KAAKG,WAAUD,KAAYF,KAAM,UAAW,GAC5CA,KAAKI,YAAWF,KAAYF,KAAM,WAAY,GAC9CA,KAAKK,eAAgB,EACrBL,KAAKM,UAAW,EAChBN,KAAKO,SAAW,EAChBP,KAAKQ,aAAc,EACnBR,KAAKS,iBAAkB,EACvBT,KAAKU,YAAa,EAClBV,KAAKW,cAAgB,EACrBX,KAAKY,WAAa,GAClBZ,KAAKa,iBAAkB,EAWvBb,KAAKc,MAAQ,EAObd,KAAKe,QAAU,GAQff,KAAKgB,QAAUhB,KAAKe,QAAU,GAM9Bf,KAAKiB,cAAgB,QAMrBjB,KAAKkB,iBAAmB,QAexBlB,KAAKmB,WAAa,EAIlBnB,KAAKoB,UAAW,CAClB,CACAC,kBACMrB,KAAKsB,SACPtB,KAAKsB,QAAQC,QAAQvB,KAAKoB,SAE9B,CACMI,uBAAuB,qCAC3B,MAAMC,QAA2BvC,EAAyBwC,EAAKvF,MAAIwF,KAAWD,IAC9E,GAAID,IAAuBC,EAAKb,gBAAiB,CAC/C,MAAMe,EAAYF,EAAKvF,GAAG0F,QAAQ,eAClCH,EAAKI,qBAAqBF,EAC5B,MACUH,GACRC,EAAKK,wBACN,EAR0B,EAS7B,CACAA,yBACM/B,KAAKgC,UAAYhC,KAAKiC,yBACxBjC,KAAKgC,SAASE,oBAAoB,SAAUlC,KAAKiC,wBACjDjC,KAAKiC,4BAAyBjD,GAEhCgB,KAAKa,iBAAkB,CACzB,CACMsB,qBAAqBhG,EAAI2E,GAAO,qCACpCsB,EAAKtB,MAAQA,EACY,SADZA,EACTa,KAAWS,SACP7D,EAAiBpC,OAAI6C,EAAW,WAGtC,EAAMJ,KAAmBwD,EAAKjG,GAAGQ,cAAc,8BAA+B,KAEhFyF,EAAK1B,YAAa,EAClB0B,EAAK3B,iBAAkB,EACvB2B,EAAK5B,aAAc,EACnB4B,EAAKxB,WAAWyB,QAASC,GAAQA,EAAIC,WACrCH,EAAKxB,WAAa,GAClBwB,EAAK7B,SAAW,EAChB6B,EAAKtB,MAAQ,CAAgC,EAdT,EAetC,CACM0B,wBAAwBjD,EAAgBC,GAAmB,qCAC/DiD,EAAKC,mBAAqBD,EAAKT,SAC/B,MAAMW,EAAQpD,EAAe1C,WAAW+F,iBAAiB,OACzD,IAAIC,EAAwC,IAA7BJ,EAAKT,SAAS5D,aAC7B,MAAM0E,EAAYH,EAAMI,QACxBlE,OAAU,IAAM8D,EAAMN,QAASlG,GAAOA,EAAG2C,MAAMC,YAAY,YAAa,UACxE0D,EAAKR,uBAAyB,MAEvBQ,EAAKjC,aAA8B,IAAfiC,EAAK3B,QAAU,EAGxCkC,KAAS,KAEP,MAAMC,EAAYR,EAAKT,SAASiB,UAC1BC,EAAkBT,EAAKtG,GAAGiC,aAChC,GAAI6E,EAAY,EAAG,CAKjB,GAAmB,IAAfR,EAAK3B,MAA6C,CACpD,MAAMqC,KAAQC,KAAM,EAAGH,GAA+B,GAAlBC,GAAwB,GAE5D,YADArE,OAAU,IArMI,EAACnC,EAASe,KAClCf,EAAQoC,MAAMC,YAAY,UAAWtB,EAAQ4F,WAAU,EAoM7BC,CAAkB9D,EAAmB,EAAI2D,GAE3D,CACA,MACF,CACIV,EAAKjC,cACFiC,EAAKnC,WACRmC,EAAKnC,UAAW,EAChBmC,EAAKrC,SAASmD,QAGZd,EAAKjC,aACPiC,EAAKtC,QAAQoD,QAUjB,MAAM/F,EAASiF,EAAKnC,SAAW,GAAK,EAC9BkD,EAAcf,EAAKlC,YAAW6C,KAAM,GAAIK,KAAKC,IAAIT,GAAazF,GAAUqF,EAAU,GACrC,IAAfJ,EAAK3B,OAA8D,IAAf0C,GAElFf,EAAKjC,aA1MiB,EAAC9D,EAASiE,MAC5C9B,OAAU,KAERnC,EAAQoC,MAAMC,YAAY,iCAAkC4B,GAAiB,EAAM,OAAS,MAC5FjE,EAAQoC,MAAMC,YAAY,UAAW,IAAG,EACzC,EAsMS4E,CAA4BnE,EAAmBiD,EAAK9B,eAEjD8B,EAAK/B,aACR+B,EAAKmB,eACLnB,EAAK/B,YAAa,KAClBmD,KAAa,CAAE/E,MAAO,UAKjB2D,EAAKjC,aACRjC,EAAiBkE,EAAKC,mBAAqB,GAAEQ,UAKjDT,EAAK3B,MAAQ,EA7OU,EAAC6B,EAAOmB,EAAUN,MAEjD3E,OAAU,KACR8D,EAAMN,QAAQ,CAAClG,EAAI4H,KAOjB,MAAMC,EAAMD,GAAKE,EAAMH,GACjBI,EAAQD,EAAMD,EACdG,EAAQX,EAAaQ,EACrBI,KAAchB,KAAM,EAAGe,EAAQD,EAAO,GAC5C/H,EAAG2C,MAAMC,YAAY,UAAWqF,EAAYf,WAAU,EACvD,EACF,EA8NOgB,CAAyB1B,EAAOG,EAAWU,GAAU,EAExD,EAEHf,EAAKT,SAASsC,iBAAiB,SAAU7B,EAAKR,wBAC9CQ,EAAKnB,eAAiB7C,yCAA+B8F,cAAc,CACjEpI,GAAIsG,EAAKT,SACTwC,YAAa,YACbC,gBAAiB,GACjBC,UAAW,IACXC,UAAW,EACXC,QAAS,KACPnC,EAAKjC,aAAc,EACdiC,EAAK/B,YACRnC,EAAiBkE,EAAKC,mBAAoB,OAU3B,IAAbG,IACFA,EAAwC,IAA7BJ,EAAKT,SAAS5D,aAAe,EAG5CyG,OAASC,IACPrC,EAAK9B,cAAgBmE,EAAGC,WAE1BC,MAAO,KACLvC,EAAKjC,aAAc,EACnBiC,EAAKnC,UAAW,EACZmC,EAAKhC,iBACPgC,EAAKN,qBAAqBM,EAAKC,mBAAoB,IACnDD,EAAKhC,iBAAkB,GAEhBgC,EAAK/B,eACZsC,KAAS,IAAMzE,EAAiBkE,EAAKC,mBAAqB,GAAED,EAAKtG,GAAGiC,kBAAiB,IAI3FqE,EAAKpB,iBAAkB,EA7GwC,EA8GjE,CACM4D,uBAAuBrD,EAAWrC,EAAgBC,GAAmB,qCACzE,MAAM5C,KAASsI,KAAe3F,GAAgB5C,cAAc,UACtDF,EAAuB0I,EAAKhJ,GAAGQ,cAAc,iDAC7CyI,KAAmBF,KAAe1F,GAAmB7C,cAAc,UAC1D,OAAXC,GAAwC,OAArBwI,IAAqB,EAC1CvG,KAAU,KACRjC,EAAOkC,MAAMC,YAAY,YAAa,QAEtCS,EAAkBV,MAAMC,YAAY,kBAAmB,UACvDqG,EAAiBtG,MAAMC,YAAY,kBAAmB,SAAQ,GAGlEoG,EAAK7D,eAAiB7C,yCAA+B8F,cAAc,CACjEpI,GAAIgJ,EAAKnD,SACTwC,YAAa,YACbC,gBAAiB,GACjBC,UAAW,IACXC,UAAW,EACXU,SAAU,IAAqB,IAAfF,EAAKrE,OACJ,KAAfqE,EAAKrE,OACuB,IAA5BqE,EAAKnD,SAASiB,UAChB2B,QAAUE,IACRK,EAAK5E,SAAW,EAChBuE,EAAGQ,KAAO,CAAEC,eAAWvG,EAAWsB,UAAU,EAAOkF,WAAW,EAAM,EAEtEX,OAASC,IACP,GAAKA,EAAGC,UAAY,GAAuB,IAAlBI,EAAK5E,WAAmBuE,EAAGQ,KAAKhF,UAAawE,EAAGQ,KAAKE,UAC5EV,EAAGQ,KAAKE,WAAY,MADtB,CAIA,IAAKV,EAAGQ,KAAKhF,SAAU,CACrBwE,EAAGQ,KAAKhF,UAAW,EACnB6E,EAAKrE,MAAQ,KACbjC,KAAU,IAAMsG,EAAKnD,SAASlD,MAAMC,YAAY,aAAc,WAC9D,MAAM0G,EA/amB7D,KACjC,MAAM8D,EAAkB9D,EAAU+D,uBAElC,OADsC,OAApBD,GAAwD,eAA5BA,EAAgBrJ,QAC3C,YAAc,SA4aHuJ,CAA0BhE,GAC1C2D,EA3ae,EAACM,EAAMtG,EAAgBrB,IACpC,UAAT2H,EACH5H,EAAqBsB,EAAgBrB,GACrCI,EAAyBiB,EAAgBrB,GAwanB4H,CAAuBL,EAAehJ,EAAsB0I,EAAKhJ,IAKnF,OAJA2I,EAAGQ,KAAKC,UAAYA,EACpBA,EAAUQ,eAAc,EAAO,GAC/BZ,EAAK/E,SAASmD,YACd4B,EAAKvE,WAAWoF,KAAKT,EAEvB,CAEAJ,EAAK5E,YAAW6C,KAAM,EAAI0B,EAAGmB,OAAS,IAAO,GAAK,GAClDnB,EAAGQ,KAAKC,UAAUW,aAAaf,EAAK5E,UACpC4E,EAAKhF,QAAQoD,MAhBb,CAgBiB,EAEnByB,MAAQF,IACN,IAAKA,EAAGQ,KAAKhF,SACX,OAIF,GAFA6E,EAAK7D,QAAQC,QAAO,IAAK,EACzB1C,KAAU,IAAMsG,EAAKnD,SAASlD,MAAMG,eAAe,eAC/CkG,EAAK5E,UAAY,GAOnB,YANAuE,EAAGQ,KAAKC,UAAUY,YAAY,EAAGhB,EAAK5E,SAAU,KAAK6F,SAAS,KAC5DjB,EAAKvE,WAAWyB,QAASC,GAAQA,EAAIC,WACrC4C,EAAKvE,WAAa,GAClBuE,EAAK7D,QAAQC,QAAO,GACpB4D,EAAKrE,MAAQ,IAIjB,MAAMP,KAAW8F,KAAwB,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAIlB,EAAK5E,UAAU,GAClF+F,EArWmB7J,OACxBS,OACJC,SAAS,KACTG,WAAWb,GACX8J,OAAO,YAAa,4DAA6D,mBAiWpDC,CAAwB/J,GAClD0I,EAAKvE,WAAWoF,KAAKM,IAAiB,EACtCzH,MAAS,OAAC,YACRpC,EAAqBqC,MAAMC,YAAY,oCAAmD,IAAXwB,EAAF,MAC7EuE,EAAGQ,KAAKC,UAAUY,oBACZG,EAAkBG,OACxBtB,EAAKvB,eACLkB,EAAGQ,KAAKC,UAAUhD,UAClB4C,EAAK7D,QAAQC,QAAO,EACtB,GAAC,IAGL4D,EAAK9D,iBAAkB,EA3EkD,EA4E3E,CACMS,qBAAqBF,GAAW,qCACpC,GAAI8E,EAAKzE,yBAA2BL,GAAa8E,EAAK7F,kBAAoB6F,EAAK1E,SAC7E,OASF0E,EAAKC,OAAO,EAAG,IAAI,EAAO,IAC1BD,EAAK7F,iBAAkB,EACvB,MAAMtB,EAAiBmH,EAAKvK,GAAGQ,cAAc,wDACvC6C,EAAoBkH,EAAKvK,GAAGQ,cAAc,2DACvB,SAAzB,EAAIgF,KAAW+E,GACbA,EAAKlE,wBAAwBjD,EAAgBC,GAG7CkH,EAAKzB,uBAAuBrD,EAAWrC,EAAgBC,EACxD,EApBmC,EAqBtC,CACAoH,qBACE5G,KAAKwB,sBACP,CACMqF,oBAAoB,qCACxB,GAAqC,UAAjCC,EAAK3K,GAAG4K,aAAa,QAEvB,YADAjL,QAAQG,MAAM,mDAGhB,MAAM2F,EAAYkF,EAAK3K,GAAG0F,QAAQmF,KAC7BpF,GAQLtC,OAAiBsC,GAAS,OAAE,YAC1B,MAAMqF,EAAqBrF,EAAUjF,cAAcuK,KAOnDJ,EAAK9E,eAAQ,EAASmF,KAAwC,MAAvBF,EAA+DA,EAAqBrF,GAI3HkF,EAAKM,0BAA4BxF,EAAUyF,8BACjCnI,EAAyB4H,EAAK3K,MAAIwF,KAAWmF,KACrDA,EAAKhF,qBAAqBF,IAG1BkF,EAAKxF,eAAiB7C,yCAA+B8F,cAAc,CACjEpI,GAAIyF,EACJ4C,YAAa,YACbC,gBAAiB,GACjBC,UAAW,IACXC,UAAW,GACX2C,SAAS,EACTjC,SAAU,IAAMyB,EAAKzB,WACrBT,QAAS,IAAMkC,EAAKlC,UACpBC,OAASC,GAAOgC,EAAKjC,OAAOC,GAC5BE,MAAO,IAAM8B,EAAK9B,UAEpB8B,EAAKzF,kBAET,KAtCEkG,OAAwBT,EAAK3K,GAsC5B,EA7CqB,EA8C1B,CACAqL,uBACExH,KAAK+B,yBACL/B,KAAKgC,cAAWhD,EACZgB,KAAKsB,UACPtB,KAAKsB,QAAQiB,UACbvC,KAAKsB,aAAUtC,EAEnB,CAUMyI,WAAW,qCACXC,EAAK7G,iBACP6G,EAAKjH,iBAAkB,EAElBiH,EAAKlH,gBACRmH,KAAI,OAAMA,KAAI,IAAMD,EAAKvF,qBAAqBuF,EAAKhF,mBAAoB,OAIzEgF,EAAKE,MAAM,GAAoC,QAChD,EAVc,EAWjB,CAIMC,SAAS,qCACTC,EAAKjH,gBAEFiH,EAAKtH,gBACRmH,KAAI,OAAMA,KAAI,IAAMG,EAAK3F,qBAAqB2F,EAAKpF,mBAAoB,MAIzEoF,EAAKF,MAAM,GAAoC,GAChD,EATY,EAUf,CAUAG,cACE,OAAOtJ,QAAQC,QAAQsB,KAAKO,SAC9B,CACA8E,WASE,SARKrF,KAAKgC,UAGS,IAAfhC,KAAKc,OAKLd,KAAKgC,SAASiB,UAAY,EAIhC,CACA2B,UACE5E,KAAKO,SAAW,EAChBP,KAAKc,MAAQ,CACf,CACA+D,OAAOmD,GACL,IAAKhI,KAAKgC,SACR,OAMF,MAAM8C,EAAKkD,EAAOC,MAOlB,QANmBjJ,IAAf8F,EAAGoD,SAAyBpD,EAAGoD,QAAQnF,OAAS,GAMlC,GAAb/C,KAAKc,MACR,OAEF,MAAMK,EAAagH,OAAOC,MAAMpI,KAAKmB,aAAenB,KAAKmB,WAAa,EAAI,EAAInB,KAAKmB,WAC7E8E,EAAS+B,EAAO/B,OAAS9E,EAG/B,GAAI8E,GAAU,EAKZ,OAFAjG,KAAKO,SAAW,EAChBP,KAAKc,MAAQ,EACTd,KAAKK,mBAEPL,KAAK2G,OAAO,EAAG,IAAI,EAAO,SAG5B,EAEF,GAAmB,IAAf3G,KAAKc,MAA2C,CAMlD,GAH4Bd,KAAKgC,SAASiB,UAGhB,EAExB,YADAjD,KAAKO,SAAW,GAIlBP,KAAKc,MAAQ,CACf,CAQA,GANIgE,EAAGuD,YACLvD,EAAGwD,iBAILtI,KAAK2G,OAAOV,EAAQ,OAAO,EAAM,IAClB,IAAXA,EAGF,YADAjG,KAAKO,SAAW,GAGlB,MAAMQ,EAAUf,KAAKe,QAErBf,KAAKO,SAAW0F,EAASlF,EAEpBf,KAAKM,WACRN,KAAKM,UAAW,EAChBN,KAAKI,SAASmD,QAGhBvD,KAAKG,QAAQoD,OAET0C,EAASlF,EAEXf,KAAKc,MAAQ,EAGXmF,EAASjG,KAAKgB,QAEhBhB,KAAK4D,eAMP5D,KAAKc,MAAQ,CAEf,CACAkE,QAEqB,IAAfhF,KAAKc,MAEPd,KAAK4D,eAEiB,IAAf5D,KAAKc,OAKZd,KAAK6H,QAET,CACAjE,eAGE5D,KAAKc,MAAQ,EAEbd,KAAK2G,OAAO3G,KAAKe,QAASf,KAAKkB,kBAAkB,EAAM,IAGvDlB,KAAKC,WAAWsD,KAAK,CACnBkE,SAAUzH,KAAKyH,SAASc,KAAKvI,OAEjC,CACA4H,MAAM9G,EAAO0H,GAEXC,WAAW,KACTzI,KAAKc,MAAQ,EACbd,KAAKO,SAAW,EAChBP,KAAKM,UAAW,EAChBN,KAAK2G,OAAO,EAAG,OAAO,EAAO,GAAE,EAC9B,KAGH3G,KAAKc,MAAQA,EACbd,KAAK2G,OAAO,EAAG3G,KAAKiB,eAAe,EAAMuH,EAC3C,CACA7B,OAAO+B,EAAGvL,EAAUwL,EAAiBH,GAC/BxI,KAAKa,kBAGTb,KAAKK,cAAgBqI,EAAI,KACzB7J,KAAU,KACR,GAAImB,KAAKgC,UAAYhC,KAAKoH,oBAAqB,CAC7C,MAAMwB,EAAc5I,KAAKgC,SAASlD,MAC5B+J,EAAkB7I,KAAKoH,oBAAoBtI,MACjD8J,EAAY/K,UAAYgL,EAAgBhL,UAAY6K,EAAI,EAAK,cAAaA,uBAAyB,GACnGE,EAAYE,mBAAqBD,EAAgBC,mBAAqB3L,EACtEyL,EAAYG,gBAAkBF,EAAgBE,gBAAkBP,EAChEI,EAAYI,SAAWL,EAAkB,SAAW,EACtD,IAEJ,CACAM,SACE,MAAM7J,KAAOuC,KAAW3B,MACxB,SAAQkJ,KAAEC,IAAM,CAAEC,KAAM,QAASC,MAAO,CACpCC,CAAClK,IAAO,EAER,CAAE,aAAYA,MAAS,EACvB,mBAAoBY,KAAKa,gBACzB,mBAAmC,IAAfb,KAAKc,MACzB,oBAAoC,IAAfd,KAAKc,MAC1B,kBAAkC,IAAfd,KAAKc,MACxB,uBAAuC,IAAfd,KAAKc,MAC7B,uBAAuC,KAAfd,KAAKc,MAC7B,uBAAuC,KAAfd,KAAKc,QAEnC,CACI3E,SAAO,SAAOoN,KAAWvJ,KAAO,CACzBwJ,sBAAa,MAAO,CAC7BpI,SAAY,CAAC,mBACZ,GAELxB,EAAUd,MAAQ,CAChB2K,IAlmBsB,kjKAmmBtBC,GAjmBqB,68KAomBvB,MAAMC,EAAmB,MACvB9J,YAAYC,IACVC,OAAiBC,KAAMF,EACzB,CACA8J,oBACE,QAAyB5K,IAArBgB,KAAK6J,YAA2B,CAClC,MAAMzK,KAAOuC,KAAW3B,MAClB8J,OAA8D9K,IAA1CgB,KAAK7D,GAAG2C,MAAMY,wBAAwC,QAAUqK,IAC1F/J,KAAK6J,YAAcG,QAAW,iBAA2B,QAAT5K,IAAS,EAASK,KAAW,UAAYuK,QAAW,UAAWF,GAAqB,WACtI,CACA,QAA+B9K,IAA3BgB,KAAKR,kBAAiC,CACxC,MAAMJ,KAAOuC,KAAW3B,MACxBA,KAAKR,kBAAoBwK,QAAW,oBAAqBA,QAAW,UAAoB,QAAT5K,EAAiB,QAAU,YAC5G,CACF,CACA6J,SACE,MAAMY,EAAc7J,KAAK6J,YACnBI,EAA4B,MAAfJ,QAAiD7K,IAA1BkL,IAASL,GAC7CzK,KAAOuC,KAAW3B,MACxB,SAAQkJ,KAAEC,IAAM,CAAEE,MAAOjK,IAAK,EAAG8J,KAAE,MAAO,CAAEG,MAAO,qBAAuBrJ,KAAK6J,aAAeI,MAAef,KAAE,MAAO,CAAEG,MAAO,2BAAyB,EAAGH,KAAE,MAAO,CAAEG,MAAO,4BAA0B,EAAGH,KAAE,cAAe,CAAEiB,KAAMnK,KAAK6J,YAAaO,QAAQ,IAAkB,OAAThL,GAAsC,aAArBY,KAAK6J,cAAgB,EAAeX,KAAE,MAAO,CAAEG,MAAO,oBAAkB,EAAGH,KAAE,WAAY,CAAEmB,KAAMC,SAAwBtK,KAAK6J,cAAgBI,MAAef,KAAE,MAAO,CAAEG,MAAO,2BAAyB,EAAGH,KAAE,WAAY,CAAEmB,KAAMrK,KAAK6J,YAAaU,MAAM,UAAiCvL,IAArBgB,KAAKwK,cAAgBxL,EAAckK,KAAE,MAAO,CAAEG,MAAO,yBAA0BoB,aAAWC,KAAkB1K,KAAKwK,iBAAgB,EAAGtB,KAAE,MAAO,CAAEG,MAAO,wBAA0BrJ,KAAKR,sBAAsB0J,KAAE,MAAO,CAAEG,MAAO,8BAA4B,EAAGH,KAAE,cAAe,CAAEiB,KAAMnK,KAAKR,0BAAgDR,IAAxBgB,KAAK2K,iBAAmB3L,EAAckK,KAAE,MAAO,CAAEG,MAAO,4BAA6BoB,aAAWC,KAAkB1K,KAAK2K,mBACv8B,CACIxO,SAAO,SAAOoN,KAAWvJ,KAAO","names":["printIonWarning","message","params","console","warn","printIonError","error","printRequiredElementError","el","targetSelectors","tagName","toLowerCase","join","createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","createAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","createScaleAnimation","refresherEl","height","clientHeight","spinnerAnimation","createTranslateAnimation","translateElement","value","Promise","resolve","trans","transitionEndAsync","writeTask","style","setProperty","undefined","removeProperty","shouldUseNativeRefresher","referenceEl","mode","refresherContent","componentOnReady","pullingSpinner","refreshingSpinner","isPlatform","webkitOverflowScrolling","_x","Refresher","constructor","hostRef","registerInstance","this","ionRefresh","createEvent","ionPull","ionStart","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","lastVelocityY","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","disabledChanged","gesture","enable","checkNativeRefresher","useNativeRefresher","_this","getIonMode","contentEl","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","removeEventListener","resetNativeRefresher","_this2","forEach","ani","destroy","setupiOSNativeRefresher","_this3","elementToTransform","ticks","querySelectorAll","MAX_PULL","NUM_TICKS","length","readTask","scrollTop","refresherHeight","ratio","clamp","toString","setSpinnerOpacity","emit","pullAmount","Math","abs","handleScrollWhileRefreshing","beginRefresh","hapticImpact","numTicks","i","min","max","range","start","progression","handleScrollWhilePulling","addEventListener","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","ev","velocityY","onEnd","setupMDNativeRefresher","getElementRoot","_this4","refreshingCircle","canStart","data","animation","cancelled","animationType","previousSibling","previousElementSibling","getRefresherAnimationType","type","createPullingAnimation","progressStart","push","deltaY","progressStep","progressEnd","onFinish","getTimeGivenProgression","snapBackAnimation","fromTo","createSnapBackAnimation","play","_this5","setCss","componentDidUpdate","connectedCallback","_this6","getAttribute","ION_CONTENT_ELEMENT_SELECTOR","customScrollTarget","ION_CONTENT_CLASS_SELECTOR","getScrollElement","backgroundContentEl","getBackgroundElement","passive","printIonContentErrorMsg","disconnectedCallback","complete","_this7","raf","close","cancel","_this8","getProgress","detail","event","touches","Number","isNaN","cancelable","preventDefault","bind","delay","setTimeout","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","render","h","Host","slot","class","e","getElement","watchers","ios","md","RefresherContent","componentWillLoad","pullingIcon","overflowRefresher","arrowDown","config","hasSpinner","SPINNERS","name","paused","icon","caretBackSharp","lazy","pullingText","innerHTML","sanitizeDOMString","refreshingText"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/index-c4b11676.js","./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Logs a warning to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n */\nconst printIonWarning = (message, ...params) => {\n  return console.warn(`[Ionic Warning]: ${message}`, ...params);\n};\n/*\n * Logs an error to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n * @param params - Additional arguments to supply to the console.error.\n */\nconst printIonError = (message, ...params) => {\n  return console.error(`[Ionic Error]: ${message}`, ...params);\n};\n/**\n * Prints an error informing developers that an implementation requires an element to be used\n * within a specific selector.\n *\n * @param el The web component element this is requiring the element.\n * @param targetSelectors The selector or selectors that were not found.\n */\nconst printRequiredElementError = (el, ...targetSelectors) => {\n  return console.error(`<${el.tagName.toLowerCase()}> must be used inside ${targetSelectors.join(' or ')}.`);\n};\n\nexport { printRequiredElementError as a, printIonError as b, printIonWarning as p };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { c as writeTask, r as registerInstance, e as createEvent, f as readTask, h, i as getElement, H as Host } from './index-8e692445.js';\nimport { a as isPlatform, b as getIonMode, c as config } from './ionic-global-c95cf239.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-e78d1307.js';\nimport { I as ION_CONTENT_ELEMENT_SELECTOR, p as printIonContentErrorMsg, b as ION_CONTENT_CLASS_SELECTOR, g as getScrollElement } from './index-5d0c8232.js';\nimport { t as transitionEndAsync, c as componentOnReady, l as clamp, g as getElementRoot, r as raf } from './helpers-3b390e48.js';\nimport { d as hapticImpact } from './haptic-029a46f6.js';\nimport { c as createAnimation } from './animation-6a1a2a1d.js';\nimport { h as caretBackSharp, i as arrowDown } from './index-da396832.js';\nimport { s as sanitizeDOMString } from './index-dff497fb.js';\nimport { S as SPINNERS } from './spinner-configs-5d6b6fe7.js';\nimport './index-c4b11676.js';\nimport './index-33ffec25.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner, refresherEl) => {\n  return type === 'scale'\n    ? createScaleAnimation(pullingSpinner, refresherEl)\n    : createTranslateAnimation(pullingSpinner, refresherEl);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation()\n    .addElement(spinnerArrowContainer)\n    .keyframes([\n    { offset: 0, opacity: '0.3' },\n    { offset: 0.45, opacity: '0.3' },\n    { offset: 0.55, opacity: '1' },\n    { offset: 1, opacity: '1' },\n  ]);\n  const circleInnerAnimation = createAnimation()\n    .addElement(circle)\n    .keyframes([\n    { offset: 0, strokeDasharray: '1px, 200px' },\n    { offset: 0.2, strokeDasharray: '1px, 200px' },\n    { offset: 0.55, strokeDasharray: '100px, 200px' },\n    { offset: 1, strokeDasharray: '100px, 200px' },\n  ]);\n  const circleOuterAnimation = createAnimation()\n    .addElement(spinner)\n    .keyframes([\n    { offset: 0, transform: 'rotate(-90deg)' },\n    { offset: 1, transform: 'rotate(210deg)' },\n  ]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation()\n      .addElement(arrowContainer)\n      .keyframes([\n      { offset: 0, transform: 'rotate(0deg)' },\n      { offset: 0.3, transform: 'rotate(0deg)' },\n      { offset: 0.55, transform: 'rotate(280deg)' },\n      { offset: 1, transform: 'rotate(400deg)' },\n    ]);\n    const arrowAnimation = createAnimation()\n      .addElement(arrow)\n      .keyframes([\n      { offset: 0, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.3, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n      { offset: 1, transform: 'translateX(-1.5px) scale(1)' },\n    ]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `scale(0) translateY(-${height}px)` },\n    { offset: 1, transform: 'scale(1) translateY(100px)' },\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `translateY(-${height}px)` },\n    { offset: 1, transform: 'translateY(100px)' },\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n  return createAnimation()\n    .duration(125)\n    .addElement(pullingRefresherIcon)\n    .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (ticks, numTicks, pullAmount) => {\n  const max = 1;\n  writeTask(() => {\n    ticks.forEach((el, i) => {\n      /**\n       * Compute the opacity of each tick\n       * mark as a percentage of the pullAmount\n       * offset by max / numTicks so\n       * the tick marks are shown staggered.\n       */\n      const min = i * (max / numTicks);\n      const range = max - min;\n      const start = pullAmount - min;\n      const progression = clamp(0, start / range, 1);\n      el.style.setProperty('opacity', progression.toString());\n    });\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = (el, value, duration = 200) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, duration);\n  writeTask(() => {\n    el.style.setProperty('transition', `${duration}ms all ease-out`);\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    }\n    else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = async (referenceEl, mode) => {\n  const refresherContent = referenceEl.querySelector('ion-refresher-content');\n  if (!refresherContent) {\n    return Promise.resolve(false);\n  }\n  await new Promise((resolve) => componentOnReady(refresherContent, resolve));\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return (pullingSpinner !== null &&\n    refreshingSpinner !== null &&\n    ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n      mode === 'md'));\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native ion-spinner{width:32px;height:32px;color:var(--ion-color-step-450, #747577)}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0) rotate(180deg);transform:scale(0) rotate(180deg);-webkit-transition:300ms;transition:300ms}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    this.state = 1 /* RefresherState.Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async checkNativeRefresher() {\n    const useNativeRefresher = await shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    }\n    else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined, 300);\n    }\n    else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach((ani) => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* RefresherState.Inactive */;\n  }\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    let MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach((el) => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* RefresherState.Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* RefresherState.Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        /**\n         * We want to delay the start of this gesture by ~30px\n         * when initially pulling down so the refresher does not\n         * overlap with the content. But when letting go of the\n         * gesture before the refresher completes, we want the\n         * refresher tick marks to quickly fade out.\n         */\n        const offset = this.didStart ? 30 : 0;\n        const pullAmount = (this.progress = clamp(0, (Math.abs(scrollTop) - offset) / MAX_PULL, 1));\n        const shouldShowRefreshingSpinner = this.state === 8 /* RefresherState.Refreshing */ || pullAmount === 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({ style: 'light' });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        }\n        else {\n          this.state = 2 /* RefresherState.Pulling */;\n          handleScrollWhilePulling(ticks, NUM_TICKS, pullAmount);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index-f8d8aa5a.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n        /**\n         * If the content had `display: none` when\n         * the refresher was initialized, its clientHeight\n         * will be 0. When the gesture starts, the content\n         * will be visible, so try to get the correct\n         * client height again. This is most common when\n         * using the refresher in an ion-menu.\n         */\n        if (MAX_PULL === 0) {\n          MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        }\n      },\n      onMove: (ev) => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* RefresherState.Completing */);\n          this.needsCompletion = false;\n        }\n        else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index-f8d8aa5a.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* RefresherState.Refreshing */ &&\n        this.state !== 32 /* RefresherState.Completing */ &&\n        this.scrollEl.scrollTop === 0,\n      onStart: (ev) => {\n        this.progress = 0;\n        ev.data = { animation: undefined, didStart: false, cancelled: false };\n      },\n      onMove: (ev) => {\n        if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* RefresherState.Pulling */;\n          writeTask(() => this.scrollEl.style.setProperty('--overflow', 'hidden'));\n          const animationType = getRefresherAnimationType(contentEl);\n          const animation = createPullingAnimation(animationType, pullingRefresherIcon, this.el);\n          ev.data.animation = animation;\n          animation.progressStart(false, 0);\n          this.ionStart.emit();\n          this.animations.push(animation);\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: (ev) => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        this.gesture.enable(false);\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n        if (this.progress <= 0.4) {\n          ev.data.animation.progressEnd(0, this.progress, 500).onFinish(() => {\n            this.animations.forEach((ani) => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* RefresherState.Inactive */;\n          });\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${progress * 100}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n          this.gesture.enable(true);\n        });\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    /**\n     * If using non-native refresher before make sure\n     * we clean up any old CSS. This can happen when\n     * a user manually calls the refresh method in a\n     * component create callback before the native\n     * refresher is setup.\n     */\n    this.setCss(0, '', false, '');\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    }\n    else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = this.el.closest(ION_CONTENT_ELEMENT_SELECTOR);\n    if (!contentEl) {\n      printIonContentErrorMsg(this.el);\n      return;\n    }\n    /**\n     * Waits for the content to be ready before querying the scroll\n     * or the background content element.\n     */\n    componentOnReady(contentEl, async () => {\n      const customScrollTarget = contentEl.querySelector(ION_CONTENT_CLASS_SELECTOR);\n      /**\n       * Query the custom scroll target (if available), first. In refresher implementations,\n       * the ion-refresher element will always be a direct child of ion-content (slot=\"fixed\"). By\n       * querying the custom scroll target first and falling back to the ion-content element,\n       * the correct scroll element will be returned by the implementation.\n       */\n      this.scrollEl = await getScrollElement(customScrollTarget !== null && customScrollTarget !== void 0 ? customScrollTarget : contentEl);\n      /**\n       * Query the background content element from the host ion-content element directly.\n       */\n      this.backgroundContentEl = await contentEl.getBackgroundElement();\n      if (await shouldUseNativeRefresher(this.el, getIonMode(this))) {\n        this.setupNativeRefresher(contentEl);\n      }\n      else {\n        this.gesture = (await import('./index-f8d8aa5a.js')).createGesture({\n          el: contentEl,\n          gestureName: 'refresher',\n          gesturePriority: 31,\n          direction: 'y',\n          threshold: 20,\n          passive: false,\n          canStart: () => this.canStart(),\n          onStart: () => this.onStart(),\n          onMove: (ev) => this.onMove(ev),\n          onEnd: () => this.onEnd(),\n        });\n        this.disabledChanged();\n      }\n    });\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* RefresherState.Completing */)));\n      }\n    }\n    else {\n      this.close(32 /* RefresherState.Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* RefresherState.Cancelling */)));\n      }\n    }\n    else {\n      this.close(16 /* RefresherState.Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* RefresherState.Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* RefresherState.Inactive */;\n  }\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches !== undefined && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* RefresherState._BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* RefresherState.Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* RefresherState.Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* RefresherState.Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* RefresherState.Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* RefresherState.Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* RefresherState.Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    }\n    else if (this.state === 2 /* RefresherState.Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* RefresherState.Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this),\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* RefresherState.Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600);\n    // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n  }\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = y > 0;\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = y > 0 ? `translateY(${y}px) translateZ(0px)` : '';\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n      }\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { slot: \"fixed\", class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* RefresherState.Inactive */,\n        'refresher-pulling': this.state === 2 /* RefresherState.Pulling */,\n        'refresher-ready': this.state === 4 /* RefresherState.Ready */,\n        'refresher-refreshing': this.state === 8 /* RefresherState.Refreshing */,\n        'refresher-cancelling': this.state === 16 /* RefresherState.Cancelling */,\n        'refresher-completing': this.state === 32 /* RefresherState.Completing */,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nRefresher.style = {\n  ios: refresherIosCss,\n  md: refresherMdCss\n};\n\nconst RefresherContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillLoad() {\n    if (this.pullingIcon === undefined) {\n      const mode = getIonMode(this);\n      const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : arrowDown;\n      this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n    }\n    if (this.refreshingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n    }\n  }\n  render() {\n    const pullingIcon = this.pullingIcon;\n    const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n    const mode = getIonMode(this);\n    return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner && (h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' && (h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { icon: caretBackSharp })))))), this.pullingIcon && !hasSpinner && (h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false }))), this.pullingText !== undefined && (h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(this.pullingText) }))), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner && (h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner }))), this.refreshingText !== undefined && (h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(this.refreshingText) })))));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n"],"x_google_ignoreList":[0,1]}