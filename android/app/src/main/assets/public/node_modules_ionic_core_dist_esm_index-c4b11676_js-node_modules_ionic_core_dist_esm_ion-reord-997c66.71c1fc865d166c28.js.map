{"version":3,"file":"node_modules_ionic_core_dist_esm_index-c4b11676_js-node_modules_ionic_core_dist_esm_ion-reord-997c66.71c1fc865d166c28.js","mappings":"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","names":["printIonWarning","message","params","console","warn","printIonError","error","printRequiredElementError","el","targetSelectors","tagName","toLowerCase","join","Reorder","constructor","hostRef","registerInstance","this","onClick","ev","reorderGroup","closest","preventDefault","disabled","stopImmediatePropagation","render","mode","getIonMode","reorderIcon","reorderThreeOutline","reorderTwoSharp","h","Host","class","icon","lazy","part","getElement","style","ios","md","ReorderGroup","ionItemReorder","createEvent","lastToIndex","cachedHeights","scrollElTop","scrollElBottom","scrollElInitial","containerTop","containerBottom","state","disabledChanged","gesture","enable","connectedCallback","contentEl","findClosestIonContent","_this","scrollEl","getScrollElement","Promise","createGesture","gestureName","gesturePriority","threshold","direction","passive","canStart","detail","onStart","onMove","onEnd","disconnectedCallback","destroy","undefined","complete","listOrReorder","resolve","completeReorder","selectedItemEl","reorderEl","event","target","item","findReorderItem","data","heights","length","children","sum","i","child","offsetHeight","push","$ionIndex","box","getBoundingClientRect","top","bottom","scrollBox","scrollTop","AUTO_SCROLL_MARGIN","indexForItem","selectedItemHeight","classList","add","ITEM_REORDER_SELECTED","hapticSelectionStart","selectedItem","scroll","autoscroll","currentY","Math","max","min","deltaY","startY","normalizedY","toIndex","itemIndexForTop","fromIndex","hapticSelectionChanged","reorderMove","transform","emit","from","to","bind","hapticSelectionEnd","len","raf","ref","insertBefore","Array","isArray","reorderArray","transition","remove","itemHeight","value","posY","amount","SCROLL_JUMP","scrollBy","e","watchers","element","node","container","parent","parentElement","array","splice","slice"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/index-c4b11676.js","./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Logs a warning to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n */\nconst printIonWarning = (message, ...params) => {\n  return console.warn(`[Ionic Warning]: ${message}`, ...params);\n};\n/*\n * Logs an error to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n * @param params - Additional arguments to supply to the console.error.\n */\nconst printIonError = (message, ...params) => {\n  return console.error(`[Ionic Error]: ${message}`, ...params);\n};\n/**\n * Prints an error informing developers that an implementation requires an element to be used\n * within a specific selector.\n *\n * @param el The web component element this is requiring the element.\n * @param targetSelectors The selector or selectors that were not found.\n */\nconst printRequiredElementError = (el, ...targetSelectors) => {\n  return console.error(`<${el.tagName.toLowerCase()}> must be used inside ${targetSelectors.join(' or ')}.`);\n};\n\nexport { printRequiredElementError as a, printIonError as b, printIonWarning as p };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-8e692445.js';\nimport { j as reorderThreeOutline, k as reorderTwoSharp } from './index-da396832.js';\nimport { b as getIonMode } from './ionic-global-c95cf239.js';\nimport { f as findClosestIonContent, g as getScrollElement } from './index-5d0c8232.js';\nimport { r as raf } from './helpers-3b390e48.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic-029a46f6.js';\nimport './index-c4b11676.js';\n\nconst reorderIosCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block;font-size:22px}.reorder-icon{font-size:34px;opacity:0.4}\";\n\nconst reorderMdCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block;font-size:22px}.reorder-icon{font-size:31px;opacity:0.3}\";\n\nconst Reorder = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  onClick(ev) {\n    const reorderGroup = this.el.closest('ion-reorder-group');\n    ev.preventDefault();\n    // Only stop event propagation if the reorder is inside of an enabled\n    // reorder group. This allows interaction with clickable children components.\n    if (!reorderGroup || !reorderGroup.disabled) {\n      ev.stopImmediatePropagation();\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    const reorderIcon = mode === 'ios' ? reorderThreeOutline : reorderTwoSharp;\n    return (h(Host, { class: mode }, h(\"slot\", null, h(\"ion-icon\", { icon: reorderIcon, lazy: false, class: \"reorder-icon\", part: \"icon\" }))));\n  }\n  get el() { return getElement(this); }\n};\nReorder.style = {\n  ios: reorderIosCss,\n  md: reorderMdCss\n};\n\nconst reorderGroupCss = \".reorder-list-active>*{display:block;-webkit-transition:-webkit-transform 300ms;transition:-webkit-transform 300ms;transition:transform 300ms;transition:transform 300ms, -webkit-transform 300ms;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none !important;transition:none !important;-webkit-box-shadow:0 0 10px rgba(0, 0, 0, 0.4);box-shadow:0 0 10px rgba(0, 0, 0, 0.4);opacity:0.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}\";\n\nconst ReorderGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n    this.lastToIndex = -1;\n    this.cachedHeights = [];\n    this.scrollElTop = 0;\n    this.scrollElBottom = 0;\n    this.scrollElInitial = 0;\n    this.containerTop = 0;\n    this.containerBottom = 0;\n    this.state = 0 /* ReorderGroupState.Idle */;\n    /**\n     * If `true`, the reorder will be hidden.\n     */\n    this.disabled = true;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async connectedCallback() {\n    const contentEl = findClosestIonContent(this.el);\n    if (contentEl) {\n      this.scrollEl = await getScrollElement(contentEl);\n    }\n    this.gesture = (await import('./index-f8d8aa5a.js')).createGesture({\n      el: this.el,\n      gestureName: 'reorder',\n      gesturePriority: 110,\n      threshold: 0,\n      direction: 'y',\n      passive: false,\n      canStart: (detail) => this.canStart(detail),\n      onStart: (ev) => this.onStart(ev),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: () => this.onEnd(),\n    });\n    this.disabledChanged();\n  }\n  disconnectedCallback() {\n    this.onEnd();\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n   *\n   * If a list of items is passed, the list will be reordered and returned in the\n   * proper order.\n   *\n   * If no parameters are passed or if `true` is passed in, the reorder will complete\n   * and the item will remain in the position it was dragged to. If `false` is passed,\n   * the reorder will complete and the item will bounce back to its original position.\n   *\n   * @param listOrReorder A list of items to be sorted and returned in the new order or a\n   * boolean of whether or not the reorder should reposition the item.\n   */\n  complete(listOrReorder) {\n    return Promise.resolve(this.completeReorder(listOrReorder));\n  }\n  canStart(ev) {\n    if (this.selectedItemEl || this.state !== 0 /* ReorderGroupState.Idle */) {\n      return false;\n    }\n    const target = ev.event.target;\n    const reorderEl = target.closest('ion-reorder');\n    if (!reorderEl) {\n      return false;\n    }\n    const item = findReorderItem(reorderEl, this.el);\n    if (!item) {\n      return false;\n    }\n    ev.data = item;\n    return true;\n  }\n  onStart(ev) {\n    ev.event.preventDefault();\n    const item = (this.selectedItemEl = ev.data);\n    const heights = this.cachedHeights;\n    heights.length = 0;\n    const el = this.el;\n    const children = el.children;\n    if (!children || children.length === 0) {\n      return;\n    }\n    let sum = 0;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      sum += child.offsetHeight;\n      heights.push(sum);\n      child.$ionIndex = i;\n    }\n    const box = el.getBoundingClientRect();\n    this.containerTop = box.top;\n    this.containerBottom = box.bottom;\n    if (this.scrollEl) {\n      const scrollBox = this.scrollEl.getBoundingClientRect();\n      this.scrollElInitial = this.scrollEl.scrollTop;\n      this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n      this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n    }\n    else {\n      this.scrollElInitial = 0;\n      this.scrollElTop = 0;\n      this.scrollElBottom = 0;\n    }\n    this.lastToIndex = indexForItem(item);\n    this.selectedItemHeight = item.offsetHeight;\n    this.state = 1 /* ReorderGroupState.Active */;\n    item.classList.add(ITEM_REORDER_SELECTED);\n    hapticSelectionStart();\n  }\n  onMove(ev) {\n    const selectedItem = this.selectedItemEl;\n    if (!selectedItem) {\n      return;\n    }\n    // Scroll if we reach the scroll margins\n    const scroll = this.autoscroll(ev.currentY);\n    // // Get coordinate\n    const top = this.containerTop - scroll;\n    const bottom = this.containerBottom - scroll;\n    const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n    const deltaY = scroll + currentY - ev.startY;\n    const normalizedY = currentY - top;\n    const toIndex = this.itemIndexForTop(normalizedY);\n    if (toIndex !== this.lastToIndex) {\n      const fromIndex = indexForItem(selectedItem);\n      this.lastToIndex = toIndex;\n      hapticSelectionChanged();\n      this.reorderMove(fromIndex, toIndex);\n    }\n    // Update selected item position\n    selectedItem.style.transform = `translateY(${deltaY}px)`;\n  }\n  onEnd() {\n    const selectedItemEl = this.selectedItemEl;\n    this.state = 2 /* ReorderGroupState.Complete */;\n    if (!selectedItemEl) {\n      this.state = 0 /* ReorderGroupState.Idle */;\n      return;\n    }\n    const toIndex = this.lastToIndex;\n    const fromIndex = indexForItem(selectedItemEl);\n    if (toIndex === fromIndex) {\n      this.completeReorder();\n    }\n    else {\n      this.ionItemReorder.emit({\n        from: fromIndex,\n        to: toIndex,\n        complete: this.completeReorder.bind(this),\n      });\n    }\n    hapticSelectionEnd();\n  }\n  completeReorder(listOrReorder) {\n    const selectedItemEl = this.selectedItemEl;\n    if (selectedItemEl && this.state === 2 /* ReorderGroupState.Complete */) {\n      const children = this.el.children;\n      const len = children.length;\n      const toIndex = this.lastToIndex;\n      const fromIndex = indexForItem(selectedItemEl);\n      /**\n       * insertBefore and setting the transform\n       * needs to happen in the same frame otherwise\n       * there will be a duplicate transition. This primarily\n       * impacts Firefox where insertBefore and transform operations\n       * are happening in two separate frames.\n       */\n      raf(() => {\n        if (toIndex !== fromIndex && (listOrReorder === undefined || listOrReorder === true)) {\n          const ref = fromIndex < toIndex ? children[toIndex + 1] : children[toIndex];\n          this.el.insertBefore(selectedItemEl, ref);\n        }\n        for (let i = 0; i < len; i++) {\n          children[i].style['transform'] = '';\n        }\n      });\n      if (Array.isArray(listOrReorder)) {\n        listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n      }\n      selectedItemEl.style.transition = '';\n      selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n      this.selectedItemEl = undefined;\n      this.state = 0 /* ReorderGroupState.Idle */;\n    }\n    return listOrReorder;\n  }\n  itemIndexForTop(deltaY) {\n    const heights = this.cachedHeights;\n    for (let i = 0; i < heights.length; i++) {\n      if (heights[i] > deltaY) {\n        return i;\n      }\n    }\n    return heights.length - 1;\n  }\n  /********* DOM WRITE ********* */\n  reorderMove(fromIndex, toIndex) {\n    const itemHeight = this.selectedItemHeight;\n    const children = this.el.children;\n    for (let i = 0; i < children.length; i++) {\n      const style = children[i].style;\n      let value = '';\n      if (i > fromIndex && i <= toIndex) {\n        value = `translateY(${-itemHeight}px)`;\n      }\n      else if (i < fromIndex && i >= toIndex) {\n        value = `translateY(${itemHeight}px)`;\n      }\n      style['transform'] = value;\n    }\n  }\n  autoscroll(posY) {\n    if (!this.scrollEl) {\n      return 0;\n    }\n    let amount = 0;\n    if (posY < this.scrollElTop) {\n      amount = -SCROLL_JUMP;\n    }\n    else if (posY > this.scrollElBottom) {\n      amount = SCROLL_JUMP;\n    }\n    if (amount !== 0) {\n      this.scrollEl.scrollBy(0, amount);\n    }\n    return this.scrollEl.scrollTop - this.scrollElInitial;\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'reorder-enabled': !this.disabled,\n        'reorder-list-active': this.state !== 0 /* ReorderGroupState.Idle */,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nconst indexForItem = (element) => {\n  return element['$ionIndex'];\n};\nconst findReorderItem = (node, container) => {\n  let parent;\n  while (node) {\n    parent = node.parentElement;\n    if (parent === container) {\n      return node;\n    }\n    node = parent;\n  }\n  return undefined;\n};\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\nconst reorderArray = (array, from, to) => {\n  const element = array[from];\n  array.splice(from, 1);\n  array.splice(to, 0, element);\n  return array.slice();\n};\nReorderGroup.style = reorderGroupCss;\n\nexport { Reorder as ion_reorder, ReorderGroup as ion_reorder_group };\n"],"x_google_ignoreList":[0,1]}